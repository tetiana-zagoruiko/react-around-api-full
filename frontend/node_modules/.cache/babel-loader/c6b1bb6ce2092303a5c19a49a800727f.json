{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tanya/Dev/react-around-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Main from './Main.js';\nimport Header from './Header.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport imageSuccessPath from \"../images/success.png\";\nimport imageOopsPath from '../images/oops.png';\nimport ImagePopup from './ImagePopup.js';\nimport * as auth from '../auth.js';\nimport api from '../utils/Api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false);\n  const [infoTooltipText, setInfoTooltipText] = React.useState(\"\");\n  const [infoTooltipImage, setInfoTooltipImage] = React.useState(\"#\");\n  const cards = [];\n  const [selectedCardLink, setSelectedCardLink] = React.useState(\"\");\n  const [selectedCardName, setSelectedCardName] = React.useState(\"\");\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n    api.getCardList().then(res => {\n      console.log(res);\n      cards = res;\n      console.log(cards);\n    }).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        setLoggedIn(true);\n        history.push(\"/\");\n      }).catch(err => console.log(err));\n    }\n  }, [loggedIn, history]);\n\n  const onSignOut = () => {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n  };\n\n  function handleCardLike(card) {\n    const isLiked = card.card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card.card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === newCard._id ? newCard : c);\n      cards = newCards;\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(cardID) {\n    api.removeCard(cardID).then(res => {\n      const newCards = cards.filter(card => card._id !== cardID);\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setInfoTooltipOpen(false);\n  }\n\n  function handleUpdateUser({\n    name,\n    title\n  }) {\n    api.setUserInfo({\n      name,\n      title\n    }).then(res => {\n      closeAllPopups();\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.setUserAvatar(avatar).then(res => {\n      closeAllPopups();\n      setCurrentUser(res);\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addCard({\n      name,\n      link\n    }).then(res => {\n      console.log(res);\n      const addedCardList = cards.concat(res);\n      cards = addedCardList;\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function openingInfoTooltip(kind) {\n    if (kind === false) {\n      setInfoTooltipText(\"Oops, something went wrong! Please try again.\");\n      setInfoTooltipImage(imageOopsPath);\n      setInfoTooltipOpen(true);\n    } else {\n      setInfoTooltipText(\"Success! You have now been registered.\");\n      setInfoTooltipImage(imageSuccessPath);\n      setInfoTooltipOpen(true);\n    }\n  }\n\n  function handleRegister(password, email) {\n    auth.register(password, email).then(res => {\n      console.log(res);\n\n      if (!res || res.statusCode === 400) {\n        openingInfoTooltip(false);\n      } else {\n        openingInfoTooltip(true);\n        history.push(\"/login\");\n        return res;\n      }\n    }).catch(err => openingInfoTooltip(false));\n  }\n\n  function handleLogin(password, email) {\n    auth.authorize(password, email).then(data => {\n      if (data.token) {\n        setLoggedIn(true);\n        history.push(\"/\");\n      } else {\n        openingInfoTooltip(false);\n      }\n    }).catch(err => openingInfoTooltip(false));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              headerText: \"Sign up\",\n              headerLink: \"/signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin,\n              openingInfoTooltip: openingInfoTooltip,\n              infoTooltipIsOpen: isInfoTooltipOpen,\n              onClose: closeAllPopups,\n              infoTooltipText: infoTooltipText,\n              infoTooltipImage: infoTooltipImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              headerText: \"Log in\",\n              headerLink: \"/signin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Register, {\n              openingInfoTooltip: openingInfoTooltip,\n              infoTooltipIsOpen: isInfoTooltipOpen,\n              onClose: closeAllPopups,\n              infoTooltipText: infoTooltipText,\n              infoTooltipImage: infoTooltipImage,\n              handleRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            loggedIn: loggedIn,\n            onEditProfile: () => {\n              setIsEditProfilePopupOpen(true);\n            },\n            onAddPlace: () => {\n              setIsAddPlacePopupOpen(true);\n            },\n            onEditAvatar: () => {\n              setIsEditAvatarPopupOpen(true);\n            },\n            onCardClick: card => {\n              setIsImagePopupOpen(true);\n              setSelectedCardLink(card.card.link);\n              setSelectedCardName(card.card.name);\n            },\n            editProfileIsOpen: isEditProfilePopupOpen,\n            editAvatarIsOpen: isEditAvatarPopupOpen,\n            addPlaceIsOpen: isAddPlacePopupOpen,\n            imagePopupIsOpen: isImagePopupOpen,\n            imageLink: selectedCardLink,\n            imageName: selectedCardName,\n            onClose: closeAllPopups,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards,\n            onSignOut: onSignOut,\n            component: Main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        onClose: closeAllPopups,\n        isOpen: isInfoTooltipOpen,\n        infoTooltipText: infoTooltipText,\n        infoTooltipImage: infoTooltipImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        onClose: closeAllPopups,\n        imagePopupIsOpened: isImagePopupOpen,\n        cardName: selectedCardName,\n        cardLink: selectedCardLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete-card\",\n        buttonText: \"Yes\",\n        title: \"Are you sure?\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rIR+ixs+sKgyedK0+ebHCdLnKe4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tanya/Dev/react-around-api-full/frontend/src/components/App.js"],"names":["React","Route","Switch","useHistory","Main","Header","Register","Login","ProtectedRoute","EditProfilePopup","EditAvatarPopup","AddPlacePopup","PopupWithForm","InfoTooltip","imageSuccessPath","imageOopsPath","ImagePopup","auth","api","CurrentUserContext","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoTooltipOpen","setInfoTooltipOpen","infoTooltipText","setInfoTooltipText","infoTooltipImage","setInfoTooltipImage","cards","selectedCardLink","setSelectedCardLink","selectedCardName","setSelectedCardName","currentUser","setCurrentUser","loggedIn","setLoggedIn","history","useEffect","getUserInfo","then","res","catch","err","console","log","getCardList","jwt","localStorage","getItem","checkToken","push","onSignOut","removeItem","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","cardID","removeCard","filter","setCards","closeAllPopups","handleUpdateUser","name","title","setUserInfo","handleUpdateAvatar","avatar","setUserAvatar","handleAddPlaceSubmit","link","addCard","addedCardList","concat","openingInfoTooltip","kind","handleRegister","password","email","register","statusCode","handleLogin","authorize","data","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nimport Main from './Main.js';\nimport Header from './Header.js';\nimport Register from './Register.js';\nimport Login from './Login.js';\nimport ProtectedRoute from './ProtectedRoute';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport InfoTooltip from './InfoTooltip.js';\nimport imageSuccessPath from \"../images/success.png\";\nimport imageOopsPath from '../images/oops.png';\nimport ImagePopup from './ImagePopup.js';\n\nimport * as auth from '../auth.js';\nimport api from '../utils/Api.js';\nimport CurrentUserContext from '../contexts/CurrentUserContext.js';\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false);\n  const [infoTooltipText, setInfoTooltipText] = React.useState(\"\");\n  const [infoTooltipImage, setInfoTooltipImage] = React.useState(\"#\");\n\n  const cards = [];\n  const [selectedCardLink, setSelectedCardLink] = React.useState(\"\");\n  const [selectedCardName, setSelectedCardName] = React.useState(\"\");\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then(res => {\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err));\n    api.getCardList()\n      .then(res => {\n        console.log(res);\n        cards = res;\n        console.log(cards);\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth.checkToken(jwt)\n      .then((res) => {\n        setLoggedIn(true);\n        history.push(\"/\");\n      })\n      .catch(err => console.log(err));\n    }\n  }, [loggedIn, history]);\n\n  const onSignOut = () => {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card.card._id, !isLiked)\n      .then((newCard) => {\n      const newCards = cards.map((c) => c._id === newCard._id ? newCard : c);\n      cards = newCards;\n    })\n      .catch(err => console.log(err));\n  }\n\n  function handleCardDelete(cardID) {\n    api.removeCard(cardID)\n    .then(res => {\n      const newCards = cards.filter(card => card._id !== cardID);\n      setCards(newCards);\n    })\n    .catch(err => console.log(err));\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setInfoTooltipOpen(false);\n  }\n\n  function handleUpdateUser({name, title}) {\n    api.setUserInfo({ name, title})\n      .then(res => {\n        closeAllPopups();\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.setUserAvatar(avatar)\n      .then(res => {\n        closeAllPopups();\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    api.addCard({ name, link })\n      .then(res => {\n        console.log(res);\n        const addedCardList = cards.concat(res)\n        cards = addedCardList;\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  function openingInfoTooltip(kind) {\n    if (kind === false) {\n      setInfoTooltipText(\"Oops, something went wrong! Please try again.\");\n      setInfoTooltipImage(imageOopsPath);\n      setInfoTooltipOpen(true);\n    } else {\n      setInfoTooltipText(\"Success! You have now been registered.\");\n      setInfoTooltipImage(imageSuccessPath);\n      setInfoTooltipOpen(true);\n    }\n  }\n\n  function handleRegister(password, email) {\n    auth.register(password, email)\n      .then((res) => {\n        console.log(res);\n        if (!res || res.statusCode === 400) {\n          openingInfoTooltip(false);\n        } else {\n          openingInfoTooltip(true);\n          history.push(\"/login\");\n          return res;\n        }\n      })\n      .catch(err => openingInfoTooltip(false))\n  }\n\n  function handleLogin(password, email) {\n    auth.authorize(password, email)\n      .then((data) => {\n        if (data.token) {\n          setLoggedIn(true);\n          history.push(\"/\")\n        } else {\n          openingInfoTooltip(false);\n        }\n      })\n      .catch(err => openingInfoTooltip(false));\n\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n    <div className=\"page\">\n        <main>\n          <Switch>\n            <Route path=\"/signin\">\n              <Header \n                headerText={\"Sign up\"}\n                headerLink={\"/signup\"}\n              />\n              <Login \n                handleLogin={handleLogin}\n                openingInfoTooltip={openingInfoTooltip}\n                infoTooltipIsOpen={isInfoTooltipOpen}\n                onClose={closeAllPopups}\n                infoTooltipText={infoTooltipText}\n                infoTooltipImage={infoTooltipImage}\n              />\n            </Route>\n            <Route path=\"/signup\">\n              <Header\n                headerText={\"Log in\"}\n                headerLink={\"/signin\"}\n              />\n              <Register \n                openingInfoTooltip={openingInfoTooltip}\n                infoTooltipIsOpen={isInfoTooltipOpen}\n                onClose={closeAllPopups}\n                infoTooltipText={infoTooltipText}\n                infoTooltipImage={infoTooltipImage}\n                handleRegister={handleRegister}\n              />\n            </Route>\n            <ProtectedRoute path=\"/\"\n              loggedIn={loggedIn}\n              onEditProfile={() => {\n                setIsEditProfilePopupOpen(true);\n              }}\n              onAddPlace={() => {\n                setIsAddPlacePopupOpen(true);\n              }}\n              onEditAvatar={() => {\n                setIsEditAvatarPopupOpen(true);\n              }}\n              onCardClick={(card) => {\n                setIsImagePopupOpen(true);\n                setSelectedCardLink(card.card.link);\n                setSelectedCardName(card.card.name);\n              }}\n              editProfileIsOpen={isEditProfilePopupOpen}\n              editAvatarIsOpen={isEditAvatarPopupOpen}\n              addPlaceIsOpen={isAddPlacePopupOpen}\n              imagePopupIsOpen={isImagePopupOpen}\n              imageLink={selectedCardLink}\n              imageName={selectedCardName}\n              onClose={closeAllPopups}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              cards={cards}\n              onSignOut={onSignOut}\n              component={Main}\n              />\n          </Switch>\n        </main>\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n        <InfoTooltip isOpen={isInfoTooltipOpen} onClose={closeAllPopups} />\n        <InfoTooltip onClose={closeAllPopups} isOpen={isInfoTooltipOpen} infoTooltipText={infoTooltipText} infoTooltipImage={infoTooltipImage} />\n        <ImagePopup onClose={closeAllPopups} imagePopupIsOpened={isImagePopupOpen} cardName={selectedCardName} cardLink={selectedCardLink} />\n        <PopupWithForm name=\"delete-card\" buttonText=\"Yes\" title=\"Are you sure?\" \n          children={\n              <React.Fragment>\n              </React.Fragment>}\n          />\n    </div>\n    </CurrentUserContext.Provider>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}